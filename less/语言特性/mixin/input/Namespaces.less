// #my-library {
//     .my-mixin() {
//       color: black;
//     }
//   }
//   // which can be used like this
//   .class {
//     #my-library > .my-mixin();
//   }




//   .foo (@bg: #f5f5f5, @color: #900) {
//     background: @bg;
//     color: @color;
//   }
//   .unimportant {
//     .foo();
//   }
//   .important {
//     .foo() !important;
//   }


//   .border-radius(@radius: 5px) {
//     -webkit-border-radius: @radius;
//        -moz-border-radius: @radius;
//             border-radius: @radius;
//   }
//   #header {
//     .border-radius;
//   }
//   .button {
//     .border-radius(6px);
//   }


//   .mixin(@color) {
//     color-1: @color;
//   }
//   .mixin(@color; @padding: 2) {
//     color-2: @color;
//     padding-2: @padding;
//   }
//   .mixin(@color; @padding; @margin: 2) {
//     color-3: @color;
//     padding-3: @padding;
//     margin: @margin @margin @margin @margin;
//   }
//   .some .selector div {
//     .mixin(#008000,2);
//   }


//   .mixin1(@color: black; @margin: 10px; @padding: 20px) {
//   color: @color;
//   margin: @margin;
//   padding: @padding;
// }
// .class1 {
//   .mixin1(@margin: 20px; @color: #33acfe);
// }
// .class2 {
//   .mixin1(#efca44; @padding: 40px);
// }

// .box-shadow(@x: 0; @y: 0; @blur: 1px; @color: #000) {
//     -webkit-box-shadow: @arguments;
//        -moz-box-shadow: @arguments;
//             box-shadow: @arguments;
//   }
//   .big-block {
//     .box-shadow(2px; 5px);
//   }



// .mixin(dark; @color) {
//     color: darken(@color, 10%);
//   }
//   .mixin(light; @color) {
//     color: lighten(@color, 10%);
//   }
//   .mixin(@_; @color) {
//     display: block;
//   }
// @switch: light;

// .class {
//   .mixin(@switch; #888);
// }


// .mixin() {
//     @width:  100%;
//     @height: 200px;
//   }
  
//   .caller {
//     .mixin;
//     width:  @width;
//     height: @height;
//   }


// .average(@x, @y) {
//     @average: ((@x + @y) / 2);
//   }
  
//   div {
//     .average(16px, 50px); // "call" the mixin
//     padding: @average;    // use its "return" value
//   }


// .mixin() {
//     @size: in-mixin;
//     @definedOnlyInMixin: in-mixin;
//   }
  
//   .class {
//     margin: @size @definedOnlyInMixin;
//     .mixin();
//   }
  
//   @size: globaly-defined-value; // callers parent scope - no protection


// .unlock(@value) { // outer mixin
//     .doSomething() { // nested mixin
//       declaration: @value;
//     }
//   }
  
//   #namespace {
//     .unlock(5); // unlock doSomething mixin
//     .doSomething(); //nested mixin was copied here and is usable
//   }

// // declare detached ruleset
// @detached-ruleset: { background: red; };

// // use detached ruleset
// .top {
//     @detached-ruleset(); 
// }


